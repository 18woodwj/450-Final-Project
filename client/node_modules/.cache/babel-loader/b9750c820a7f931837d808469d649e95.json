{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vtrem\\\\OneDrive\\\\Documents\\\\GitHub\\\\450-Final-Project\\\\client\\\\src\\\\pages\\\\SavedPage.js\";\nimport React from 'react';\nimport { Table, Pagination, Select } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst playerColumns = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.PlayerId}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 28\n  }, this)\n}, {\n  title: 'Nationality',\n  dataIndex: 'Nationality',\n  key: 'Nationality',\n  sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n}, {\n  title: 'Rating',\n  dataIndex: 'Rating',\n  key: 'Rating',\n  sorter: (a, b) => a.Rating - b.Rating\n}\n// TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n// TASK 8: add a column for Club, with the ability to (alphabetically) sort \n// TASK 9: add a column for Value - no sorting required\n];\n\nclass SavedPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null\n    };\n    this.leagueOnChange = this.leagueOnChange.bind(this);\n    this.goToMatch = this.goToMatch.bind(this);\n  }\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`;\n  }\n  leagueOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n  }\n  componentDidMount() {\n    getAllMatches(null, null, 'D1').then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n    getAllPlayers().then(res => {\n      console.log(res.results);\n      // TASK 1: set the correct state attribute to res.results\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.playersResults,\n          columns: playerColumns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"D1\",\n          style: {\n            width: 120\n          },\n          onChange: this.leagueOnChange,\n          children: /*#__PURE__*/_jsxDEV(Option, {\n            value: \"D1\",\n            children: \"Bundesliga\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          onRow: (record, rowIndex) => {\n            return {\n              onClick: event => {\n                this.goToMatch(record.MatchId);\n              } // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n            };\n          },\n\n          dataSource: this.state.matchesResults,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(ColumnGroup, {\n            title: \"Teams\",\n            children: /*#__PURE__*/_jsxDEV(Column, {\n              title: \"H\",\n              dataIndex: \"Home\",\n              sorter: (a, b) => a.Home.localeCompare(b.Home)\n            }, \"Home\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColumnGroup, {\n            title: \"Goals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SavedPage;","map":{"version":3,"names":["React","Table","Pagination","Select","MenuBar","getAllMatches","getAllPlayers","Column","ColumnGroup","Option","playerColumns","title","dataIndex","key","sorter","a","b","Name","localeCompare","render","text","row","PlayerId","Nationality","Rating","SavedPage","Component","constructor","props","state","matchesResults","matchesPageNumber","matchesPageSize","playersResults","pagination","leagueOnChange","bind","goToMatch","matchId","window","location","value","componentDidMount","then","res","setState","results","console","log","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper","record","rowIndex","onClick","event","MatchId","Home"],"sources":["C:/Users/vtrem/OneDrive/Documents/GitHub/450-Final-Project/client/src/pages/SavedPage.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Select\r\n} from 'antd'\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getAllMatches, getAllPlayers } from '../fetcher'\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Option } = Select;\r\n\r\n\r\nconst playerColumns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'Name',\r\n    key: 'Name',\r\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\r\n  },\r\n  {\r\n    title: 'Nationality',\r\n    dataIndex: 'Nationality',\r\n    key: 'Nationality',\r\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\r\n  },\r\n  {\r\n    title: 'Rating',\r\n    dataIndex: 'Rating',\r\n    key: 'Rating',\r\n    sorter: (a, b) => a.Rating - b.Rating\r\n    \r\n  },\r\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\r\n  // TASK 8: add a column for Club, with the ability to (alphabetically) sort \r\n  // TASK 9: add a column for Value - no sorting required\r\n];\r\n\r\nclass SavedPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      matchesResults: [],\r\n      matchesPageNumber: 1,\r\n      matchesPageSize: 10,\r\n      playersResults: [],\r\n      pagination: null  \r\n    }\r\n\r\n    this.leagueOnChange = this.leagueOnChange.bind(this)\r\n    this.goToMatch = this.goToMatch.bind(this)\r\n  }\r\n\r\n\r\n  goToMatch(matchId) {\r\n    window.location = `/matches?id=${matchId}`\r\n  }\r\n\r\n  leagueOnChange(value) {\r\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\r\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllMatches(null, null, 'D1').then(res => {\r\n      this.setState({ matchesResults: res.results })\r\n    })\r\n\r\n    getAllPlayers().then(res => {\r\n      console.log(res.results)\r\n      // TASK 1: set the correct state attribute to res.results\r\n    })\r\n\r\n \r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <MenuBar />\r\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\r\n          <h3>Players</h3>\r\n          <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\r\n        </div>\r\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n          <h3>Matches</h3>\r\n          <Select defaultValue=\"D1\" style={{ width: 120 }} onChange={this.leagueOnChange}>\r\n            <Option value=\"D1\">Bundesliga</Option>\r\n             {/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\r\n\r\n          </Select>\r\n          \r\n          <Table onRow={(record, rowIndex) => {\r\n    return {\r\n      onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \r\n    };\r\n  }} dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\r\n            <ColumnGroup title=\"Teams\">\r\n              {/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\r\n              <Column title=\"H\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\r\n            </ColumnGroup>\r\n            <ColumnGroup title=\"Goals\">\r\n              {/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\r\n             \r\n            </ColumnGroup>\r\n             {/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\r\n          </Table>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SavedPage\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}